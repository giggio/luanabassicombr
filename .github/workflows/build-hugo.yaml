# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Deploy Hugo site to Cloudflare Workers

on:
  push:
    branches:
      - main
    paths-ignore:
      - ".github/**"
      - .*
      - flake.lock
      - "*.nix"
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.147.7
      HUGO_ENVIRONMENT: production
      TZ: America/Sao_Paulo
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Cache Restore
        id: cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            ${{ runner.temp }}/hugo_cache
          key: hugo-${{ github.run_id }}
          restore-keys:
            hugo-
      - name: Build with Hugo
        run: |
          export GIT_COMMIT_SHA=$(git show --format="%H" -s) \
            GIT_AUTHOR_NAME=$(git show --format="%an" -s) \
            GIT_AUTHOR_DATE=$(git show --format="%ai" -s) \
            GIT_COMMIT_MSG=$(git show --format="%s" -s)
          hugo \
            --gc \
            --baseURL https://luana.giggio.net \
            --cacheDir "${{ runner.temp }}/hugo_cache" \
            --destination build/public
          cp wrangler.jsonc build/
      - name: Cache Save
        id: cache-save
        uses: actions/cache/save@v4
        with:
          path: |
            ${{ runner.temp }}/hugo_cache
          key: ${{ steps.cache-restore.outputs.cache-primary-key }}
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          path: build
          name: build

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/download-artifact@v4

      - name: Deploy
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: build
          wranglerVersion: "4.23.0"
